1、设置全局名字和email地址
git config --global user.name "your name"
git config --global user.email "email@example.com"

2、把这个目录变成Git可以管理的仓库
git init

3、提交文件
git add filename

4、上传提交
git commit -m 'commit message'

5、查看仓库的状态
git status

6、对比文件的差异
git diff filename
git diff HEAD -- readme.txt

7、查看版本控制的历史记录
git log
如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数

8、版本表示方法
当前版本：HEAD
上一个版本：HEAD^
上上个版本：HEAD^^
...
上100个版本：HEAD~100

9、回退版本
git reset
git reset --hard HEAD^

10、重返未来，回退到历史版本之后，想重新回退到最新版本
git reset --hard commit_id

为什么Git比其他版本控制系统设计得优秀，因为Git跟踪并管理的是修改，而非文件。

11、撤销修改
git checkout -- readme.txt
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。

12、远程仓库

	12.1 创建ssh-key
	 ssh-keygen -t rsa -C "youremail@example.com"			
	12.2 将一个已有本地仓库与远程仓库关联
	git remote add origin git@github.com:Vvegetables/learngit.git
	git push -u origin master

13、克隆仓库
git clone git@github.com:Vvegetables/learngit.git

14、分支管理：
创建dev分支，然后切换到dev分支
git checkout -b dev
==
git branch dev
git checkout dev

查看当前所处分支
git branch

15、合并分支：
git merge dev

16、删除分支
git branch -d dev







